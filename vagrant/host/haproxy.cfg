#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    daemon
    user                haproxy
    group               haproxy
    log                 /dev/log local6
    log                 /dev/log local5 notice
    maxconn             50000
    #chroot              /var/lib/haproxy
    pidfile             /var/run/haproxy.pid

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                 tcp
    option               tcplog
    log                  global
    option               dontlognull
    timeout connect      5000
    timeout client       50000
    timeout server       50000

#---------------------------------------------------------------------
# dedicated stats page
#---------------------------------------------------------------------
listen stats
    mode http
    bind :22222
    stats enable
    stats uri            /haproxy?stats
    stats realm          Haproxy\ Statistics
    stats auth           yany:yany
    stats refresh        30s

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main_https_listen
    bind 192.168.219.117:443
    mode                tcp
    option              tcplog
    log                 global
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

#---------------------------------------------------------------------
# api-server frontend
#---------------------------------------------------------------------
frontend api_server_https_listen
    bind 192.168.219.117:6443
    mode                tcp
    option              tcplog
    log                 global
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }


#---------------------------------------------------------------------
# Common HAProxy nodes configuration
#---------------------------------------------------------------------

# -------------------------------
# ACLs
# -------------------------------

acl acl_prod.cluster.yanychoi.site.https      req.ssl_sni -m reg ^.*\.prod\.cluster\.yanychoi\.site$
acl acl_ops.cluster.yanychoi.site.https      req.ssl_sni -m reg ^.*\.ops\.cluster\.yanychoi\.site$
acl acl_api_server_prod.cluster.yanychoi.site.https req.ssl_sni -m reg ^prod\.cluster\.yanychoi\.site$

# -------------------------------
# Conditions
# -------------------------------

use_backend backend_prod.cluster.https if acl_prod.cluster.yanychoi.site.https
use_backend backend_ops.cluster.https if acl_ops.cluster.yanychoi.site.https
use_backend backend_prod_api_server.cluster.https if acl_api_server_prod.cluster.yanychoi.site.https

#---------------------------------------------------------------------
# Backends
#---------------------------------------------------------------------


# PROD CLUSTER (HTTPS)
backend backend_prod.cluster.https
    description prod_cluster.https
    mode tcp
    balance source
    option ssl-hello-chk
    server master 192.168.10.10:30443 check-sni check
    server worker1 192.168.10.101:30443 check-sni check
    server worker2 192.168.10.102:30443 check-sni check
    server worker3 192.168.10.103:30443 check-sni check

# OPS CLUSTER (HTTPS)
backend backend_ops.cluster.https
    description ops_cluster.https
    mode tcp
    balance source
    option ssl-hello-chk
    server ops-m 192.168.10.20:30443 check-sni check
    server ops-w1 192.168.10.201:30443 check-sni check

# PROD CLUSTER API SERVER (HTTPS)
backend backend_prod_api_server.cluster.https
    description prod_cluster_api_server.https
    mode tcp
    balance source
    option ssl-hello-chk
    server master 192.168.10.10:6443 check-sni check


frontend main_http_listen
    bind 192.168.219.117:80
    mode                http
    option              httplog
    log                 global

acl acl_prod.cluster.yanychoi.site.https_http      hdr_reg(host) -i ^.*\.prod\.cluster\.yanychoi\.site$
acl acl_ops.cluster.yanychoi.site.https_http      hdr_reg(host) -i ^.*\.ops\.cluster\.yanychoi\.site$

use_backend backend_prod.cluster.http if acl_prod.cluster.yanychoi.site.https_http
use_backend backend_ops.cluster.http if acl_ops.cluster.yanychoi.site.https_http

# PROD CLUSTER (HTTP)
backend backend_prod.cluster.http
    description prod_cluster.http
    mode http
    balance roundrobin
    server master 192.168.10.10:30080 check
    server worker1 192.168.10.101:30080 check
    server worker2 192.168.10.102:30080 check
    server worker3 192.168.10.103:30080 check

# OPS CLUSTER (HTTP)
backend backend_ops.cluster.http
    description ops_cluster.http
    mode http
    balance roundrobin
    server ops-m 192.168.10.20:30080 check
    server ops-w1 192.168.10.201:30080 check
